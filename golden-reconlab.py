# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from getpass import getpass

username = input("Enter Username: ")
password = getpass()

class TestTestrecon():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testrecon(self):
    # Test name: test-recon
    # Step # | name | target | value
    # 1 | open | /login/index.php | 
    self.driver.get("https://cyrin.atcorp.com/mod/cyrin/view.php?id=33")
    # 2 | setWindowSize | 1514x940 | 
    self.driver.set_window_size(1514, 940)
    # 3 | type | id=username | username
    self.driver.find_element(By.ID, "username").send_keys(username)
    # 4 | type | id=password | password
    self.driver.find_element(By.ID, "password").send_keys(password)
    # 5 | click | id=loginbtn | 
    self.driver.find_element(By.ID, "loginbtn").click()
    # 6 | selectFrame | index=0 | 
    self.driver.switch_to.frame(0)
    # 7 | click | name=control | 
    self.driver.find_element(By.NAME, "control").click()
    # 8 | mouseDown | css=canvas | 
    element = self.driver.find_element(By.CSS_SELECTOR, "canvas")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 9 | mouseUp | id=noVNC_mouse_capture_elem | 
    element = self.driver.find_element(By.ID, "noVNC_mouse_capture_elem")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 10 | click | css=.exercise-page | 
    self.driver.find_element(By.CSS_SELECTOR, ".exercise-page").click()
    # 11 | click | id=btnEndExercise | 
    self.driver.find_element(By.ID, "btnEndExercise").click()
    # 12 | click | id=btnConfirmEndExercise | 
    self.driver.find_element(By.ID, "btnConfirmEndExercise").click()
    # 13 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 14 | click | id=action-menu-toggle-1 | 
    self.driver.find_element(By.ID, "action-menu-toggle-1").click()
    # 15 | click | id=actionmenuaction-6 | 
    self.driver.find_element(By.ID, "actionmenuaction-6").click()
  
